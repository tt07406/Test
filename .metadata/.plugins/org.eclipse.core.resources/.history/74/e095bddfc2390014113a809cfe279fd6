<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/news_all?useUnicode=true&amp;characterEncoding=UTF-8"/>
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="root"/>
		<!-- 指定连接数据库的密码 -->
		<property name="password" value=""/>
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="40"/>
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="1"/>
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="1"/>
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="20"/>
	</bean>
	<!-- 定义Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>org/news/hibernate/Admin.hbm.xml</value>
				<value>org/news/hibernate/NewsAttachment.hbm.xml</value>
				<value>org/news/hibernate/Newsinfo.hbm.xml</value>
				<value>org/news/hibernate/Newstype.hbm.xml</value>
				<value>org/news/hibernate/Users.hbm.xml</value>
				<value>org/news/hibernate/Leavemessage.hbm.xml</value>
				<value>org/news/hibernate/Replys.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 指定数据库方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<!-- 是否根据需要每次自动创建数据库 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 显示Hibernate持久化操作所生成的SQL -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 将SQL脚本进行格式化后再输出 -->
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="adminDAO" class="org.news.dao.AdminDAO"></bean>
	<bean id="attachmentDAO" class="org.news.dao.NewsAttachmentDAO"></bean>
	<bean id="newsInfoDAO" class="org.news.dao.NewsInfoDAO"></bean>
	<bean id="newsTypeDAO" class="org.news.dao.NewsTypeDAO"></bean>
	<bean id="usersDAO" class="org.news.dao.UsersDAO"></bean>
	<bean id="adminService" class="org.news.service.impl.AdminServiceImpl">
		<property name="adminDAO" ref="adminDAO"></property></bean>
	<bean id="attachmentService" class="org.news.service.impl.AttachmentServiceImpl">
		<property name="attachmentDAO" ref="attachmentDAO"></property></bean>
	<bean id="newsInfoService" class="org.news.service.impl.NewsInfoServiceImpl">
		<property name="newsInfoDAO" ref="newsInfoDAO"></property>
		<property name="adminDAO" ref="adminDAO"></property>
		<property name="attachmentDAO" ref="attachmentDAO"></property></bean>
	<bean id="newsTypeService" class="org.news.service.impl.NewsTypeServiceImpl">
		<property name="newsTypeDAO" ref="newsTypeDAO"></property>
		<property name="infoService" ref="newsInfoService"></property></bean>
	<bean id="userService" class="org.news.service.impl.UserServiceImpl">
		<property name="userDAO" ref="usersDAO"></property></bean>
	<bean id="adminAction" class="org.news.action.AdminAction">
		<property name="adminService" ref="adminService"></property></bean>
	<bean id="adminLogin" class="org.news.action.AdminLogin">
		<property name="adminService" ref="adminService"></property></bean>
	<bean id="downloadAttachmentAction" class="org.news.action.DownloadAttachmentAction">
		<property name="service" ref="attachmentService"></property></bean>
	<bean id="newsInfoAction" class="org.news.action.NewsInfoAction">
		<property name="service" ref="newsInfoService"></property>
		<property name="typeService" ref="newsTypeService"></property>
		<property name="attiService" ref="attachmentService"></property></bean>
	<bean id="newsTypeAction" class="org.news.action.NewsTypeAction">
		<property name="newstypeService" ref="newsTypeService"></property></bean>
	<bean id="softwareAction" class="org.news.action.SoftwareAction">
		<property name="service" ref="attachmentService"></property></bean>
	<bean id="userLoginAction" class="org.news.action.UserLoginAction">
		<property name="userService" ref="userService"></property></bean>
	<bean id="userRegisterAction" class="org.news.action.UserRegisterAction">
		<property name="userService" ref="userService"></property></bean>
	<bean id="userAction" class="org.news.action.UsersAction">
		<property name="userService" ref="userService"></property></bean>
	<bean id="validateNameAction" class="org.news.action.ValidateNameAction">
		<property name="userService" ref="userService"></property>
		<property name="adminService" ref="adminService"></property>
		<property name="newstypeService" ref="newsTypeService"></property></bean>


</beans>