/*
 * 系统名称：新闻发布系统
 * 
 * 类名：SoftwareAction
 * 
 * 创建日期：2014-08-22
 */
package org.news.action;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.FileUtils;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.ServletResponseAware;
import org.news.model.NewsAttachment;
import org.news.service.AttachmentService;
import org.news.utils.Logger;

import com.opensymphony.xwork2.ActionSupport;

/**
 * 用于软件操作的Action
 * 
 * @author tt
 * @version 14.8.18
 */
public class SoftwareAction extends ActionSupport implements ServletResponseAware{

	private static final long serialVersionUID = 4362240508650937317L;
	private AttachmentService service = new AttachmentService();
	private HttpServletResponse response;
	
	String msg = null ;//提示信息
	String kw; //查询关键字
	String cp; //当前页
	String ls; //页的大小
	String pg = "Software_list.action"; //URL
	List<NewsAttachment> softwares;//软件列表
	long recorders; //软件数
	int softwareid;//软件ID
	Long sid; //下载软件ID
	private File[] uploads;
    private String[] uploadFileNames;
    private String[] uploadContentTypes;
    String filename;//下载文件名
    
    /**
	 * @return the filename
	 */
	public String getFilename() {
		return filename;
	}
	/**
	 * @param filename the filename to set
	 */
	public void setFilename(String filename) {
		this.filename = filename;
	}
	public File[] getUpload() { return this.uploads; }
    public void setUpload(File[] upload) { this.uploads = upload; }
    public String[] getUploadFileName() { return this.uploadFileNames; }
    public void setUploadFileName(String[] uploadFileName) { this.uploadFileNames = uploadFileName; }
    public String[] getUploadContentType() { return this.uploadContentTypes; }
    public void setUploadContentType(String[] uploadContentType) { this.uploadContentTypes = uploadContentType; }   
	
	/**
	 * @return the sid
	 */
	public Long getSid() {
		return sid;
	}

	/**
	 * @param sid the sid to set
	 */
	public void setSid(Long sid) {
		this.sid = sid;
	}

	/**
	 * @return the msg
	 */
	public String getMsg() {
		return msg;
	}

	/**
	 * @param msg the msg to set
	 */
	public void setMsg(String msg) {
		this.msg = msg;
	}

	/**
	 * @return the kw
	 */
	public String getKw() {
		return kw;
	}

	/**
	 * @param kw the kw to set
	 */
	public void setKw(String kw) {
		this.kw = kw;
	}

	/**
	 * @return the cp
	 */
	public String getCp() {
		return cp;
	}

	/**
	 * @param cp the cp to set
	 */
	public void setCp(String cp) {
		this.cp = cp;
	}

	/**
	 * @return the ls
	 */
	public String getLs() {
		return ls;
	}

	/**
	 * @param ls the ls to set
	 */
	public void setLs(String ls) {
		this.ls = ls;
	}

	/**
	 * @return the pg
	 */
	public String getPg() {
		return pg;
	}

	/**
	 * @param pg the pg to set
	 */
	public void setPg(String pg) {
		this.pg = pg;
	}

	/**
	 * @return the softwares
	 */
	public List<NewsAttachment> getSoftwares() {
		return softwares;
	}

	/**
	 * @param softwares the softwares to set
	 */
	public void setSoftwares(List<NewsAttachment> softwares) {
		this.softwares = softwares;
	}

	/**
	 * @return the recorders
	 */
	public long getRecorders() {
		return recorders;
	}

	/**
	 * @param recorders the recorders to set
	 */
	public void setRecorders(long recorders) {
		this.recorders = recorders;
	}

	/**
	 * @return the softwareid
	 */
	public int getSoftwareid() {
		return softwareid;
	}

	/**
	 * @param softwareid the softwareid to set
	 */
	public void setSoftwareid(int softwareid) {
		this.softwareid = softwareid;
	}

	/**
	 * 默认上传
	 * @return
	 */
	public String execute() {
		String pageErrorInfo = null;

		//这里添加和删除都要从smartupload中获得参数
		try {			
			ServletActionContext.getRequest().setCharacterEncoding("UTF-8");
	        String filepath = ServletActionContext.getServletContext().getRealPath("/softwares");
	        System.out.println(filepath);
			
			if(insert(filepath)){
				msg = "successed";
			}else{
				msg = "failed";
			}
			Logger.log(msg, Logger.DEBUG);
		} catch (Exception e){
			e.printStackTrace();
			pageErrorInfo = e.getMessage();
			msg = "failed"+pageErrorInfo;
		}
	
		return SUCCESS;
	}

	@Override
	public void setServletResponse(HttpServletResponse arg0) {
		this.response = arg0;
	}
	
	/**
	 * 软件列表
	 * @return
	 */
	public String list(){
		int currentPage = 1 ;	// 为当前所在的页，默认在第1页
		int lineSize = 20;		// 每次显示的记录数
		long allRecorders = 0 ;	// 表示全部的记录数
		String keyWord = kw ;	// 接收查询关键字
		
		try{
			currentPage = Integer.parseInt(cp) ;
		} catch(Exception e) {}
		try{
			lineSize = Integer.parseInt(ls) ;
		} catch(Exception e) {}
		if(keyWord == null){
			keyWord = "" ;	// 如果模糊查询没有关键字，则表示查询全部
		}
		
		List<NewsAttachment> attachments = service.getAllSoftwares(keyWord, currentPage, lineSize);
		allRecorders = service.getCount(keyWord);
		setSoftwares(attachments);
		setRecorders(allRecorders);
		
		setCp(""+currentPage);
		setLs(""+lineSize);
		
		return SUCCESS;
	}
	
	/**
	 * 删除软件
	 * @return
	 */
	public String delete(){		
		String filepath = ServletActionContext.getServletContext().getRealPath("/") + "softwares" + java.io.File.separator; //文件保存路径
		String name = service.findNewsAttachmentById(softwareid).getAttachmentName();
		if (service.deleteAttachment(softwareid)&&service.deleteFile(filepath+name)){//同时删除数据库和文件夹里的数据					
			msg = "删除成功";
		}else{
			msg = "删除失败";
		}

		return SUCCESS;
	}
	
	/**
	 * 下载软件
	 * @return
	 */
	public InputStream getTargetFile(){
		NewsAttachment attachment = service.findNewsAttachmentById(sid);
		String filepath = ServletActionContext.getServletContext().getRealPath("/")+"softwares"+File.separator; //文件保存路径
	    filename = attachment.getAttachmentName();

		return ServletActionContext.getServletContext().getResourceAsStream(filepath+filename);
	}

	/**
	 * 增加软件
	 * @param request
	 * @param response
	 * @throws ServletException
	 * @throws IOException
	 */
	public boolean insert(String path)
			throws ServletException, IOException, Exception{
		
		if (uploads.length == 0) throw new Exception("请选择上传的文件");
		
		// 写到指定路径
		File file = new File(path);
		//判断指定的路径下是否有softwares，如果没有，自动创建
		if (!file.exists()) {
			file.mkdirs();
		}
		
		for(int i=0;i<uploads.length;i++){
            String fileName = uploadFileNames[i];
			
			//存入本地
			try{
				FileUtils.copyFile(uploads[i], new File(file, fileName));
				//软件在附件中newsid为0,且只保存名称
				NewsAttachment newsAttachment=new NewsAttachment();
				newsAttachment.setNewsId((long)0);
				newsAttachment.setAttachmentName(fileName);
				if (!service.addNewsAttachment(newsAttachment)){
					return false;
				}
			}catch (Exception e){
				service.deleteFile(path+File.separator+fileName);
				throw new Exception("中文转码失败，请上传时修改文件名");
			}
			
		}
		
		return true;
	}
}