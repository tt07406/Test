/*
 * 系统名称：新闻发布系统
 * 
 * 类名：UsersHibernateDAO
 * 
 * 创建日期：2014-09-12
 */
package org.news.dao;

import org.news.model.Admin;
import org.news.model.Users;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

/**
 * 用户信息DAO
 * @author tt
 * @version 14.8.18
 */
public class UsersHibernateDAO extends HibernateDaoSupport {

	private static final Logger log = LoggerFactory.getLogger(UsersHibernateDAO.class);
	
	/**
	 * 用户登录验证
	 * @param user
	 * @return 验证的操作结果
	 */
	public boolean findLogin(Users user){
		String userName = user.getUsersName();
		String userPass = user.getUsersPass();
		
		//取得ID数，且大于零
		int result = (Integer)getHibernateTemplate().find("select count(usersId) from users where usersName = ? and usersPass = ?", userName,userPass).get(0);
		
		if (result > 0){
			return true;
		}else{
			return false;
		}
	}
	
	/**
	 * 添加会员
	 * @param user 传入VO对象
	 * @return 操作是否成功
	 */
	public boolean addUser(Users user){
		try {
			getHibernateTemplate().save(user);
			log.debug("save successful");
			return true;
		} catch (Exception e) {
			log.error("save failed", e);
			e.printStackTrace();
		}
		return false;
	}
	
	/**
     * 可通过Id来查找会员的信息
     * @param usersId
     * @return
     */
    public Users findUsersById(int usersId){
    	return (Users)getHibernateTemplate().get(Users.class, usersId); 
    }
    
	/**
	 * 批量删除会员
	 * @param userIds
	 * @return 是否成功
	 */
	public boolean deleteUsers(int[] userIds) {
		for (int i = 0; i < userIds.length; i++) {
			try {
				getHibernateTemplate().delete(findUsersById(userIds[i]));
				log.debug("delete successful");
			} catch (RuntimeException re) {
				log.error("delete failed", re);
				return false;
			}
		}
		return true;
	}
}
